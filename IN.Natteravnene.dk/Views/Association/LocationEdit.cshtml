@model Location

@section pagescripts {
    <script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>
}
@section inlinescripts {
    <script type="text/javascript">
        //<![CDATA[
        google.maps.event.addDomListener(window, 'load', Initialize);


        // global "map" variable
        var map = null;
        var marker = null;



        function Initialize() {

            // the location of the initial pin
            var myLatlng = new google.maps.LatLng(@Model.latstring, @Model.lngstring);

            var address = '@(Model.association == null ? "" : Model.association.Name)';
            
            if ((document.getElementById("latstring").value == '' | document.getElementById("lngstring").value == '') && address != '') {
                var geocoder = new google.maps.Geocoder();
                var address = document.getElementById("Name").value;
                geocoder.geocode({ 'address': address }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        map.setCenter(results[0].geometry.location);
                        myLatlng = results[0].geometry.location;
                        marker.setPosition(results[0].geometry.location);
                    } 
                });
            }

            // create the map
            var myOptions = {
                zoom: 15,
                center: myLatlng,
                mapTypeControl: true,
                mapTypeControlOptions: { style: google.maps.MapTypeControlStyle.DROPDOWN_MENU },
                navigationControl: true,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            }

            map = new google.maps.Map(document.getElementById("map-canvas"), myOptions);

            // establish the initial marker/pin
            var image = '/images/googlepins/pin2.png';
            marker = new google.maps.Marker({
                position: myLatlng,
                map: map,
                //icon: image,
                title: "@Model.Name",
                draggable: true
            });

            // establish the initial div form fields
            formlat = document.getElementById("latstring").value = myLatlng.lat();
            formlng = document.getElementById("lngstring").value = myLatlng.lng();


            google.maps.event.addListener(marker, 'dragend', function (event) {
                formlat = document.getElementById("latstring").value = event.latLng.lat();
                formlng = document.getElementById("lngstring").value = event.latLng.lng();
                map.setCenter(event.latLng);
            });

            // removing old markers/pins
            google.maps.event.addListener(map, 'click', function (event) {
                marker.setPosition(event.latLng);
                map.setCenter(event.latLng);

                // populate the form fields with lat & lng
                formlat = document.getElementById("latstring").value = event.latLng.lat();
                formlng = document.getElementById("lngstring").value = event.latLng.lng();

            });

        }



        //]]>
    </script>
}
<div class="page-header position-relative">
    <h1>
        <a href="@Url.Action("Index")" class="btn btn-small btn-primary" data-rel="tooltip" title="@General.BtnBackToAssociationTooltip">
            <i class="ace-icon @Icons.BackIcon icon-only"></i>
        </a> @(Model.LocationID == Guid.Empty ? General.LocationCreate : General.LocationksEdit) <small>@string.Format(General.BrandTitleAssociation, Model.association.Name)</small>
    </h1>
</div>

@using (Html.BeginForm("LocationEdit", null, FormMethod.Post, new { @class = "form-horizontal" }))
{

    @Html.Partial("~/Views/Shared/_FormSummery.cshtml");
    @Html.HiddenFor(m => m.LocationID)
    @Html.HiddenFor(m => m.association.AssociationID)
    @Html.HiddenFor(m => m.association.Name)
    @Html.HiddenFor(a => a.latstring)
    @Html.HiddenFor(a => a.lngstring)
    <div class="row">
        <div class="col-xs-5">
            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "col-sm-2 control-label no-padding-right" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = DomainStrings.LocationName })
                    @Html.ValidationMessageFor(m => m.Name)

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ShortName, new { @class = "col-sm-2 control-label no-padding-right" })
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.ShortName, new { @class = "form-control", placeholder = DomainStrings.ShortName })
                    @Html.ValidationMessageFor(m => m.ShortName)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Active, new { @class = "col-sm-2 control-label no-padding-right" })
                
                    <div class="col-sm-8">
                        <label>
                            <input id="@Html.IdFor(m => m.Active)" name="@Html.IdFor(m => m.Active)" class="ace ace-switch ace-switch-6" type="checkbox" value="true" @if (Model.Active == true) { <text> checked </text>  } @if (Model.ShowNationalMap == true) { <text> disabled </text>  } />
                            <span class="lbl"></span>
                        </label>
                @Html.ValidationMessageFor(m => m.Active)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(m => m.ShowNationalMap, new { @class = "col-sm-2 control-label no-padding-right" })
            <div class="col-sm-8">
                <label>
                    <input id="@Html.IdFor(m => m.ShowNationalMap)" name="@Html.IdFor(m => m.ShowNationalMap)" class="ace ace-switch ace-switch-6" type="checkbox" disabled value="true" @if (Model.ShowNationalMap == true) { <text> checked </text>             } />
                    <span class="lbl"></span>
                </label>
                    @Html.ValidationMessageFor(m => m.ShowNationalMap)
            </div>
        </div>

        <hr />
        <p>@General.LocationEditHelp</p>
    </div>
    <div class="col-xs-7">
        <div class="mapaspect">
            <div id="map-canvas" class="map-canvas"></div>
        </div>
    </div>
    <div class="col-xs-12">
        <div class=" space-4"></div>
        <div class="clearfix form-actions">
            <div class="col-md-9">
                <button class="btn btn-info" type="submit" data-rel="tooltip" data-placement="right" title="@General.BtnSaveTooltip">
                    <i class="icon-ok bigger-110"></i>
                    @(Model.LocationID == Guid.Empty ? General.Create : General.Save)
                </button>
            </div>
        </div>
    </div>
    </div>
}
